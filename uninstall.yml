---
- name: Revert changes from kubeadm init/join (for RHEL 9)
  hosts: all
  become: yes
  vars:
    ansible_user: "ch0nen"
  tasks:

    # 1. Check if kubeadm has already been reset
    - name: Check if /etc/kubernetes/pki exists (indicating kubeadm init has run)
      stat:
        path: /etc/kubernetes/pki
      register: kubeadm_pki_stat
      failed_when: false

    - name: Reset Kubernetes setup with kubeadm reset (only if /etc/kubernetes/pki exists)
      command: kubeadm reset -f
      when: kubeadm_pki_stat.stat.exists == true
      failed_when: false
      ignore_errors: yes

    # 2. Remove Kubernetes-related packages (kubeadm, kubelet, kubectl)
    - name: Remove Kubernetes packages (kubeadm, kubelet, kubectl)
      dnf:
        name:
          - kubeadm
          - kubelet
          - kubectl
        state: absent
      when: ansible_facts['os_family'] == 'RedHat'

    # 3. Remove container runtime (containerd or docker)
    - name: Remove containerd (or docker) runtime
      dnf:
        name: containerd
        state: absent
      when: ansible_facts['os_family'] == 'RedHat'

    # 4. Clean up Kubernetes network configurations (Flannel, Calico, etc.)
    - name: Remove Kubernetes network configuration files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/cni/net.d/
        - /etc/kubernetes/
        - /etc/etcd/
        - /var/lib/kubelet/
        - /var/lib/etcd/

    # 5. Remove Kubernetes user and groups
    - name: Remove Kubernetes user and group
      user:
        name: kube
        state: absent
      when: ansible_facts['os_family'] == 'RedHat'

    # 6. Reset iptables and network settings
    - name: Flush iptables
      command: iptables -F

    - name: Restart NetworkManager (RHEL 9)
      service:
        name: NetworkManager
        state: restarted
      when: ansible_facts['os_family'] == 'RedHat'

    # 7. Remove any lingering Kubernetes node entries
    - name: Remove kubelet configuration
      file:
        path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        state: absent
      when: ansible_facts['os_family'] == 'RedHat'

    # 8. Remove any kubeadm and kubelet certificates
    - name: Remove certificates generated by kubeadm
      file:
        path: "/etc/kubernetes/pki/{{ item }}"
        state: absent
      with_items:
        - apiserver.crt
        - apiserver.key
        - apiserver-kubelet-client.crt
        - apiserver-kubelet-client.key
        - ca.crt
        - ca.key
        - front-proxy-ca.crt
        - front-proxy-ca.key
        - etcd/peer.crt
        - etcd/peer.key
        - etcd/server.crt
        - etcd/server.key

    # 9. Remove kubeconfig files for the current user
    - name: Remove kubeconfig files for the current user
      file:
        path: "/home/{{ ansible_user }}/.kube/config"
        state: absent
      when: ansible_facts['os_family'] == 'RedHat'

    # 10. Reboot the node to finalize the reset (optional)
    - name: Reboot the node
      reboot:
        msg: "Rebooting to finalize reset"
        test_command: uptime
        reboot_timeout: 600
      when: ansible_facts['os_family'] == 'RedHat'
